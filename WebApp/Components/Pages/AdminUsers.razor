@page "/admin/users"
@using WebApp.DTOs
@using WebApp.Services
@inject UserService UserService
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin")]
@attribute [StreamRendering]
<PageTitle>Users</PageTitle>

<MudDataGrid T="UserDto" MultiSelection="true" Items="@_users" SortMode="SortMode.Single" Filterable="true" QuickFilter="@SearchFilter"
             Hideable="true" RowClick="@RowClicked" Virtualize>
    <ToolBarContent>
        <MudText Typo="Typo.h6">Users</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <Columns>
        <PropertyColumn Property="u => u.Name" />
        <PropertyColumn Property="u => u.Username" />
        <PropertyColumn Property="u => u.BirthDate" />
        <PropertyColumn Property="u => u.BankAccounts == null ? 0 : u.BankAccounts.Count" Title="Accounts" />
    </Columns>
    <PagerContent>
        <MudDataGridPager T="UserDto" />
    </PagerContent>
</MudDataGrid>

@code {
    private IQueryable<UserDto>? _users;
    private string _searchString = string.Empty;

    protected override void OnInitialized()
    {
        _users = UserService.GetAllUsersWithBankAccountsAsQueryable();
    }
    
    private Func<UserDto, bool> SearchFilter => u =>
    {
        if (u.Name.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        
        if (u.Username.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    };
    
    private void RowClicked(DataGridRowClickEventArgs<UserDto> obj)
    {
        // TODO
    }
}