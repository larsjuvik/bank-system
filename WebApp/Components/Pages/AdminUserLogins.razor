@page "/admin/logins"
@using WebApp.DTOs
@using WebApp.Services
@inject UserLoginService UserLoginService
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin")]
@attribute [StreamRendering]
<PageTitle>User Logins</PageTitle>

<MudDataGrid T="UserLoginDto" MultiSelection="true" Items="@_userLogins" SortMode="SortMode.Multiple" Filterable="true" QuickFilter="@SearchFilter"
             Hideable="true" RowClick="@RowClicked" SelectedItemsChanged="@SelectedItemsChanged" Virtualize>
    <ToolBarContent>
        <MudText Typo="Typo.h6">User Logins</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <Columns>
        <SelectColumn T="UserLoginDto" />
        <PropertyColumn Property="u => u.User.Username" />
        <PropertyColumn Property="u => u.LoginDateTime" />
    </Columns>
    <PagerContent>
        <MudDataGridPager T="UserLoginDto" />
    </PagerContent>
</MudDataGrid>

@code {
    private IQueryable<UserLoginDto>? _userLogins;
    private string _searchString = string.Empty;

    protected override void OnInitialized()
    {
        _userLogins = UserLoginService.GetUserLoginsWithUserAsQueryable();
    }

    private Func<UserLoginDto, bool> SearchFilter => u =>
    {
        if (u.User.Username.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    };

    private void SelectedItemsChanged(HashSet<UserLoginDto> obj)
    {
        // TODO
    }

    private void RowClicked(DataGridRowClickEventArgs<UserLoginDto> obj)
    {
        // TODO
    }
}