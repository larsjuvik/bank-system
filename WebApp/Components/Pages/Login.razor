@page "/login"
@using System.Security.Claims
@using System.Text.Json
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using WebApp.DTOs
@using WebApp.Services
@inject UserService UserService
@inject NavigationManager Navigation
@using static WebApp.Authorization.RoleHelper
@inject HttpClient HttpClient

<PageTitle>Login</PageTitle>

<div>
    <h1>Login</h1>

    <div class="card mt-3">
        <div class="card-body">
            @if (_errorMessage != null)
            {
                <p class="text-danger">@_errorMessage</p>
            }

            <form action="api/authentication/login" method="post">
                <div class="mb-3">
                    <label for="username" class="form-label">Username</label>
                    <input name="username" id="username" class="form-control" type="text" />
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <input name="password" id="password" class="form-control" type="password" />
                </div>
                <button type="submit" class="btn btn-primary w-100">Login</button>

                <p class="mt-3 mb-0">Don't have an account? <a href="/register">Register here</a></p>
            </form>
        </div>
    </div>
</div>
@code {
    [SupplyParameterFromForm(FormName = "login")]
    private LoginDto LoginData { get; set; } = new();

    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }

    private string? _errorMessage = null;

    protected override async Task OnInitializedAsync()
    {
        if (HttpContext == null)
        {
            return;
        }

        var identity = HttpContext.User.Identity;
        if (identity == null)
        {
            return;
        }

        // User is already logged in
        if (identity.IsAuthenticated)
        {
            Navigation.NavigateTo("/");
        }
    }

    private async Task HandleValidSubmit()
    {
        if (LoginData?.Username == null || LoginData?.Password == null)
        {
            _errorMessage = "Fill in all fields";
            return;
        }

        // POST sign in
        var content = new StringContent(JsonSerializer.Serialize(LoginData), null, "application/json");
        var uri = $"{Navigation.BaseUri}api/authentication/login";
        var result = await HttpClient.PostAsync(uri, content);
        //GracefulRedirect();
    }

    /// <summary>
    /// Gracefully redirects to returnUrl if set, or just returns to home screen
    /// </summary>
    private void GracefulRedirect()
    {
        var uri = new Uri(Navigation.Uri);
        var returnUrl = System.Web.HttpUtility.ParseQueryString(uri.Query).Get("returnUrl");

        if (returnUrl == null)
        {
            Navigation.NavigateTo("/");
        }
    }
}