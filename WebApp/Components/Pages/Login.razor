@page "/login"
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations
@using WebApp.Security
@inject NavigationManager Navigation
@inject DemoAuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Login</PageTitle>

<h1>Login or register</h1>

To use this bank demo, you need to login or register an account.

<div class="card mt-3">
    <EditForm Model="LoginData" OnValidSubmit="HandleValidSubmit" FormName="login" Enhance>
        <div class="card-body">
            <ValidationSummary />
            <DataAnnotationsValidator />
            <div class="mb-3">
                <label for="username" class="form-label">Username</label>
                <InputText id="username" class="form-control" @bind-Value="LoginData.Username" />
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <InputText id="password" class="form-control" type="password" @bind-Value="LoginData.Password" />
            </div>
            <button type="submit" class="btn btn-primary">Login</button>
        </div>
    </EditForm>
</div>

@code {
    [SupplyParameterFromForm(FormName = "login")]
    private LoginModel LoginData { get; set; } = new LoginModel();
    private class LoginModel
    {
        [Required]
        [MinLength(5)]
        [MaxLength(20)]
        public string Username { get; set; }

        [Required]
        [DataType(DataType.Password)]
        [MinLength(8)]
        [MaxLength(100)]
        public string Password { get; set; }
    }

    private async Task HandleValidSubmit()
    {
        var result = await AuthenticationStateProvider.Login(LoginData.Username, LoginData.Password);
        if (result)
        {
            Navigation.NavigateTo("/");
        }
    }
}