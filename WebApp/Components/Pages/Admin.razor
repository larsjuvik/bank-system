@page "/admin"
@using WebApp.DTOs
@using WebApp.Services
@inject UserService UserService
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.QuickGrid
@attribute [Authorize(Roles = "Admin")]
@attribute [StreamRendering]
<PageTitle>Admin</PageTitle>

<div>
    <h1>Admin</h1>
    <p>Edit and delete users from the application.</p>
@if (_users != null)
{
    <div>
        <div class="overflow-hidden rounded card">
            <QuickGrid class="table table-responsive mb-0" Items="_users" Pagination="_pagination">
                <PropertyColumn Property="@(u => u.Username)" Sortable="true"/>
                <PropertyColumn Property="@(u => u.BirthDate)" Format="yyyy-MM-dd" Sortable="true"/>
                <TemplateColumn Title="Actions" class="d-flex flex-row gap-3">
                    <a class="btn btn-sm btn-primary" href="/edit/user/@context.Username">Edit</a>
                    <button class="btn btn-sm btn-danger" href="/delete/user/@context.Username">Delete</button>
                </TemplateColumn>
            </QuickGrid>
            <Paginator State="_pagination"></Paginator>
        </div>
    </div>
}
</div>

@code {
    readonly PaginationState _pagination = new() { ItemsPerPage = 10 };

    private IQueryable<UserDto>? _users;

    protected override async Task OnInitializedAsync()
    {
        _users = (await UserService.GetAllUsersWithBankAccountsAsync()).AsQueryable();
    }

    private Task HandleEditUser(UserDto context)
    {
        throw new NotImplementedException();
    }

    private Task HandleDeleteUser(UserDto context)
    {
        throw new NotImplementedException();
    }

}